version: "3"

# Must have BuildKit enabled
# COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose build

networks:
  internet:
  intranet:
    internal: true

services:

  vpn:
    image: protonvpn-docker
    restart: always
    environment:
      env_file:
      - vpn.env
      # Credentials
      PROTONVPN_USERNAME: ${PROTONVPN_USERNAME}
      PROTONVPN_PASSWORD: ${PROTONVPN_PASSWORD}
      # Override these where applicable
      PROTONVPN_SERVER: ${PROTONVPN_SERVER:-RANDOM}
      PROTONVPN_TIER: ${PROTONVPN_TIER:-0}
    networks:
      - internet
      - intranet
    cap_add:
      - net_admin
    devices:
      - /dev/net/tun:/dev/net/tun
    # Expose pyload container's port here!
    # expose:
    #  - 8000
    build:
      context: protonvpn-docker
      dockerfile: Dockerfile
  
  firewall:
    env_file:
      - firewall.env
    depends_on:
      - vpn
    restart: always
    # This capibility is needed to add firewall rules.
    cap_add:
      - net_admin
    # Some environment variables to configure the firewall. See the Dockerfile
    # for more about these options.
    environment:
      ALLOW_IP_ADDRESS: $PROXY_IP
      ALLOW_PORT: $PROXY_PORT
      ALLOW_PROTO: tcp

      # This is the port which a tcp socket will be opened on once the firewall
      # is ready. Containers which require the firewall to be available before
      # doing something should wait until this port is open. See below for an
      # example of how to wait.
      FIREWALL_READY_SIGNAL_PORT: 60000
    network_mode: service:vpn
    image: docker-firewall
    build:
      context: docker-firewall
      dockerfile: Dockerfile
      
  socks:
    environment:
      env_file:
      - socks.env
      USER: ${PROXY_USER}
      PASS: ${PROXY_PASS}
      HTTPS_IP: ${PROXY_IP}
      HTTPS_PORT: ${PROXY_PORT}
    depends_on:
      - firewall
    restart: always
    network_mode: service:firewall
    image: socks-over-https
    build:
      context: socks-over-https
      dockerfile: Dockerfile
  
  app:
    env_file:
      - app.env
    depends_on:
      - socks
    restart: always
    network_mode: service:socks
    image: ubuntu:latest
    
